node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "LearningRateDecay/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "LearningRateDecay/Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "LearningRateDecay/Variable/Assign"
  op: "Assign"
  input: "LearningRateDecay/Variable"
  input: "LearningRateDecay/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LearningRateDecay/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "LearningRateDecay/Variable/read"
  op: "Identity"
  input: "LearningRateDecay/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LearningRateDecay/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "LearningRateDecay/LearningRateDecayFactor"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "LearningRateDecay/mul"
  op: "Mul"
  input: "LearningRateDecay/Variable/read"
  input: "LearningRateDecay/LearningRateDecayFactor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "LearningRateDecay/Assign"
  op: "Assign"
  input: "LearningRateDecay/Variable"
  input: "LearningRateDecay/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LearningRateDecay/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dropout/DropoutProbability/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Dropout/DropoutProbability"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dropout/DropoutProbability/Assign"
  op: "Assign"
  input: "Dropout/DropoutProbability"
  input: "Dropout/DropoutProbability/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dropout/DropoutProbability"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dropout/DropoutProbability/read"
  op: "Identity"
  input: "Dropout/DropoutProbability"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dropout/DropoutProbability"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Dropout/SetDropoutRate"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Dropout/Assign"
  op: "Assign"
  input: "Dropout/DropoutProbability"
  input: "Dropout/SetDropoutRate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dropout/DropoutProbability"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "UserID"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "ItemID"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "NegativeItemID"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Neighborhood"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "NeighborhoodLengthID"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "NeighborhoodNeg"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "NeighborhoodLengthIDNeg"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal/mul"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/Assign"
  op: "Assign"
  input: "MemoryEmbed/embeddings"
  input: "MemoryEmbed/embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MemoryEmbed/embeddings/read"
  op: "Identity"
  input: "MemoryEmbed/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryEmbed/embedding_lookup"
  op: "GatherV2"
  input: "MemoryEmbed/embeddings/read"
  input: "UserID"
  input: "MemoryEmbed/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryEmbed/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal/mul"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MemoryOutput/embeddings/Assign"
  op: "Assign"
  input: "MemoryOutput/embeddings"
  input: "MemoryOutput/embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MemoryOutput/embeddings/read"
  op: "Identity"
  input: "MemoryOutput/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryOutput/embedding_lookup"
  op: "GatherV2"
  input: "MemoryOutput/embeddings/read"
  input: "UserID"
  input: "MemoryOutput/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryOutput/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "TB\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ItemMemory/embeddings/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ItemMemory/embeddings/Initializer/truncated_normal/TruncatedNormal"
  input: "ItemMemory/embeddings/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings/Initializer/truncated_normal"
  op: "Add"
  input: "ItemMemory/embeddings/Initializer/truncated_normal/mul"
  input: "ItemMemory/embeddings/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16980
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ItemMemory/embeddings/Assign"
  op: "Assign"
  input: "ItemMemory/embeddings"
  input: "ItemMemory/embeddings/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ItemMemory/embeddings/read"
  op: "Identity"
  input: "ItemMemory/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ItemMemory/embedding_lookup"
  op: "GatherV2"
  input: "ItemMemory/embeddings/read"
  input: "ItemID"
  input: "ItemMemory/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory/embedding_lookup/Identity"
  op: "Identity"
  input: "ItemMemory/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory_1/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ItemMemory_1/embedding_lookup"
  op: "GatherV2"
  input: "ItemMemory/embeddings/read"
  input: "NegativeItemID"
  input: "ItemMemory_1/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "ItemMemory_1/embedding_lookup/Identity"
  op: "Identity"
  input: "ItemMemory_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed_1/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryEmbed_1/embedding_lookup"
  op: "GatherV2"
  input: "MemoryEmbed/embeddings/read"
  input: "Neighborhood"
  input: "MemoryEmbed_1/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed_1/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryEmbed_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput_1/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryOutput_1/embedding_lookup"
  op: "GatherV2"
  input: "MemoryOutput/embeddings/read"
  input: "Neighborhood"
  input: "MemoryOutput_1/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput_1/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryOutput_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/Max"
  op: "Max"
  input: "NeighborhoodLengthID"
  input: "UserMemoryLayer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice/stack_1"
  op: "Pack"
  input: "UserMemoryLayer/strided_slice/stack_1/0"
  input: "UserMemoryLayer/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice"
  op: "StridedSlice"
  input: "MemoryEmbed_1/embedding_lookup/Identity"
  input: "UserMemoryLayer/strided_slice/stack"
  input: "UserMemoryLayer/strided_slice/stack_1"
  input: "UserMemoryLayer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice_1/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice_1/stack_1"
  op: "Pack"
  input: "UserMemoryLayer/strided_slice_1/stack_1/0"
  input: "UserMemoryLayer/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/strided_slice_1"
  op: "StridedSlice"
  input: "MemoryOutput_1/embedding_lookup/Identity"
  input: "UserMemoryLayer/strided_slice_1/stack"
  input: "UserMemoryLayer/strided_slice_1/stack_1"
  input: "UserMemoryLayer/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/InitialQuery"
  op: "Add"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "ItemMemory/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/ExpandDims"
  op: "ExpandDims"
  input: "UserMemoryLayer/InitialQuery"
  input: "UserMemoryLayer/AttentionHop0/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/transpose"
  op: "Transpose"
  input: "UserMemoryLayer/AttentionHop0/ExpandDims"
  input: "UserMemoryLayer/AttentionHop0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/mul"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/transpose"
  input: "UserMemoryLayer/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/Sum"
  op: "Sum"
  input: "UserMemoryLayer/AttentionHop0/mul"
  input: "UserMemoryLayer/AttentionHop0/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 311
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Range"
  op: "Range"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const_1"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Const_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "NeighborhoodLengthID"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Cast"
  op: "Cast"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Less"
  op: "Less"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Range"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast"
  op: "Cast"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Sum"
  op: "Sum"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Less"
  op: "Less"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/Const"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/All"
  op: "All"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Less"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (UserMemoryLayer/AttentionHop0/MemoryMask/Sum:0) = "
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (UserMemoryLayer/AttentionHop0/MemoryMask/Sum:0) = "
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/All"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_0"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_1"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_2"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Sum"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast_1"
  op: "Cast"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Less"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/LogicalNot"
  op: "LogicalNot"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/SequenceMask/Less"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast_2"
  op: "Cast"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/LogicalNot"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/mul/x"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.4028235e+38
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/mul"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/mul/x"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/mul_1/x"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028235e+38
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/mul_1"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/mul_1/x"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/add"
  op: "Add"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/mul"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Const"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Max"
  op: "Max"
  input: "NeighborhoodLengthID"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_1/0"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_1"
  op: "Pack"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_1/0"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_2"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
  op: "StridedSlice"
  input: "UserMemoryLayer/AttentionHop0/Sum"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_1"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_1/0"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_1"
  op: "Pack"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_1/0"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_2"
  op: "Const"
  input: "^UserMemoryLayer/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1"
  op: "StridedSlice"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/add"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_1"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
  op: "Minimum"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/Attention"
  op: "Softmax"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/TransformAttention/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/TransformAttention"
  op: "ExpandDims"
  input: "UserMemoryLayer/AttentionHop0/Attention"
  input: "UserMemoryLayer/AttentionHop0/TransformAttention/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/TransformOutputMemory/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/TransformOutputMemory"
  op: "Transpose"
  input: "UserMemoryLayer/strided_slice_1"
  input: "UserMemoryLayer/AttentionHop0/TransformOutputMemory/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/TransformOutputMemory"
  input: "UserMemoryLayer/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/OutputNeighborhood/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "UserMemoryLayer/AttentionHop0/OutputNeighborhood"
  op: "Sum"
  input: "UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
  input: "UserMemoryLayer/AttentionHop0/OutputNeighborhood/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "ItemMemory/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "mul"
  input: "UserMemoryLayer/AttentionHop0/OutputNeighborhood"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18027757
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Layer/LinearWx/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "Layer/LinearWx/w/Initializer/truncated_normal/TruncatedNormal"
  input: "Layer/LinearWx/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Initializer/truncated_normal"
  op: "Add"
  input: "Layer/LinearWx/w/Initializer/truncated_normal/mul"
  input: "Layer/LinearWx/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer/LinearWx/w/Assign"
  op: "Assign"
  input: "Layer/LinearWx/w"
  input: "Layer/LinearWx/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer/LinearWx/w/read"
  op: "Identity"
  input: "Layer/LinearWx/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Layer/LinearWx/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Layer/LinearWx/w/Regularizer/l2_regularizer"
  op: "Mul"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer/scale"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/Layer/LinearWx/MatMul"
  op: "MatMul"
  input: "concat"
  input: "Layer/LinearWx/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Layer/LinearWx/b/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer/LinearWx/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer/LinearWx/b/Assign"
  op: "Assign"
  input: "Layer/LinearWx/b"
  input: "Layer/LinearWx/b/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer/LinearWx/b/read"
  op: "Identity"
  input: "Layer/LinearWx/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "sequential/Layer/LinearWx/add"
  op: "Add"
  input: "sequential/Layer/LinearWx/MatMul"
  input: "Layer/LinearWx/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "sequential/Layer/Relu"
  op: "Relu"
  input: "sequential/Layer/LinearWx/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.38254604
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.38254604
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "OutputVector/w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "OutputVector/w/Initializer/random_uniform/max"
  input: "OutputVector/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "OutputVector/w/Initializer/random_uniform/RandomUniform"
  input: "OutputVector/w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OutputVector/w/Initializer/random_uniform"
  op: "Add"
  input: "OutputVector/w/Initializer/random_uniform/mul"
  input: "OutputVector/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OutputVector/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OutputVector/w/Assign"
  op: "Assign"
  input: "OutputVector/w"
  input: "OutputVector/w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OutputVector/w/read"
  op: "Identity"
  input: "OutputVector/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OutputVector/w/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "OutputVector/w/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "OutputVector/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OutputVector/w/Regularizer/l2_regularizer"
  op: "Mul"
  input: "OutputVector/w/Regularizer/l2_regularizer/scale"
  input: "OutputVector/w/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/OutputVector/MatMul"
  op: "MatMul"
  input: "sequential/Layer/Relu"
  input: "OutputVector/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/Squeeze"
  op: "Squeeze"
  input: "sequential/OutputVector/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "MemoryEmbed_2/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryEmbed_2/embedding_lookup"
  op: "GatherV2"
  input: "MemoryEmbed/embeddings/read"
  input: "NeighborhoodNeg"
  input: "MemoryEmbed_2/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryEmbed_2/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryEmbed_2/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput_2/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MemoryOutput_2/embedding_lookup"
  op: "GatherV2"
  input: "MemoryOutput/embeddings/read"
  input: "NeighborhoodNeg"
  input: "MemoryOutput_2/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "MemoryOutput_2/embedding_lookup/Identity"
  op: "Identity"
  input: "MemoryOutput_2/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/Max"
  op: "Max"
  input: "NeighborhoodLengthIDNeg"
  input: "UserMemoryLayer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice/stack_1"
  op: "Pack"
  input: "UserMemoryLayer_1/strided_slice/stack_1/0"
  input: "UserMemoryLayer_1/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice"
  op: "StridedSlice"
  input: "MemoryEmbed_2/embedding_lookup/Identity"
  input: "UserMemoryLayer_1/strided_slice/stack"
  input: "UserMemoryLayer_1/strided_slice/stack_1"
  input: "UserMemoryLayer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice_1/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice_1/stack_1"
  op: "Pack"
  input: "UserMemoryLayer_1/strided_slice_1/stack_1/0"
  input: "UserMemoryLayer_1/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/strided_slice_1"
  op: "StridedSlice"
  input: "MemoryOutput_2/embedding_lookup/Identity"
  input: "UserMemoryLayer_1/strided_slice_1/stack"
  input: "UserMemoryLayer_1/strided_slice_1/stack_1"
  input: "UserMemoryLayer_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/InitialQuery"
  op: "Add"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "ItemMemory_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/ExpandDims"
  op: "ExpandDims"
  input: "UserMemoryLayer_1/InitialQuery"
  input: "UserMemoryLayer_1/AttentionHop0/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/transpose"
  op: "Transpose"
  input: "UserMemoryLayer_1/AttentionHop0/ExpandDims"
  input: "UserMemoryLayer_1/AttentionHop0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/mul"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/transpose"
  input: "UserMemoryLayer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/Sum"
  op: "Sum"
  input: "UserMemoryLayer_1/AttentionHop0/mul"
  input: "UserMemoryLayer_1/AttentionHop0/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 311
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Range"
  op: "Range"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const_1"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Const_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "NeighborhoodLengthIDNeg"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Cast"
  op: "Cast"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Less"
  op: "Less"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Range"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast"
  op: "Cast"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum"
  op: "Sum"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Less"
  op: "Less"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/Const"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/All"
  op: "All"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Less"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum:0) = "
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum:0) = "
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/All"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_0"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_1"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert/data_2"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Sum"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast_1"
  op: "Cast"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Less"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/LogicalNot"
  op: "LogicalNot"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/SequenceMask/Less"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast_2"
  op: "Cast"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/LogicalNot"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul/x"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.4028235e+38
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul/x"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul_1/x"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028235e+38
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul_1"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul_1/x"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/add"
  op: "Add"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 311
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Const"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Max"
  op: "Max"
  input: "NeighborhoodLengthIDNeg"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_1/0"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_1"
  op: "Pack"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_1/0"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_2"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
  op: "StridedSlice"
  input: "UserMemoryLayer_1/AttentionHop0/Sum"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_1"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_1/0"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_1"
  op: "Pack"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_1/0"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Max"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_2"
  op: "Const"
  input: "^UserMemoryLayer_1/AttentionHop0/MemoryMask/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1"
  op: "StridedSlice"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/add"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_1"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
  op: "Minimum"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/Attention"
  op: "Softmax"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/TransformAttention/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/TransformAttention"
  op: "ExpandDims"
  input: "UserMemoryLayer_1/AttentionHop0/Attention"
  input: "UserMemoryLayer_1/AttentionHop0/TransformAttention/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
  op: "Transpose"
  input: "UserMemoryLayer_1/strided_slice_1"
  input: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
  input: "UserMemoryLayer_1/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
  op: "Sum"
  input: "UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
  input: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "ItemMemory_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "mul_1"
  input: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "sequential_1/Layer/LinearWx/MatMul"
  op: "MatMul"
  input: "concat_1"
  input: "Layer/LinearWx/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential_1/Layer/LinearWx/add"
  op: "Add"
  input: "sequential_1/Layer/LinearWx/MatMul"
  input: "Layer/LinearWx/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "sequential_1/Layer/Relu"
  op: "Relu"
  input: "sequential_1/Layer/LinearWx/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "sequential_1/OutputVector/MatMul"
  op: "MatMul"
  input: "sequential_1/Layer/Relu"
  input: "OutputVector/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential_1/Squeeze"
  op: "Squeeze"
  input: "sequential_1/OutputVector/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/sub"
  op: "Sub"
  input: "sequential/Squeeze"
  input: "sequential_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/Sigmoid"
  op: "Sigmoid"
  input: "Loss/BPRLoss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-12
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/add"
  op: "Add"
  input: "Loss/BPRLoss/Sigmoid"
  input: "Loss/BPRLoss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/Log"
  op: "Log"
  input: "Loss/BPRLoss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/Neg"
  op: "Neg"
  input: "Loss/BPRLoss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/Rank"
  op: "Rank"
  input: "Loss/BPRLoss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/BPRLoss/range"
  op: "Range"
  input: "Loss/BPRLoss/range/start"
  input: "Loss/BPRLoss/Rank"
  input: "Loss/BPRLoss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Loss/BPRLoss"
  op: "Mean"
  input: "Loss/BPRLoss/Neg"
  input: "Loss/BPRLoss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/Squeeze"
  op: "Squeeze"
  input: "Loss/BPRLoss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "Loss/Rank/packed"
  op: "Pack"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer"
  input: "OutputVector/w/Regularizer/l2_regularizer"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/range"
  op: "Range"
  input: "Loss/range/start"
  input: "Loss/Rank"
  input: "Loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Loss/Sum/input"
  op: "Pack"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer"
  input: "OutputVector/w/Regularizer/l2_regularizer"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Loss/Sum"
  op: "Sum"
  input: "Loss/Sum/input"
  input: "Loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/add"
  op: "Add"
  input: "Loss/Squeeze"
  input: "Loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Fill"
  op: "Fill"
  input: "Optimizer/gradients/Shape"
  input: "Optimizer/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Fill"
}
node {
  name: "Optimizer/gradients/Loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Fill"
  input: "^Optimizer/gradients/Loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Fill"
  input: "^Optimizer/gradients/Loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/add_grad/tuple/control_dependency"
  input: "Optimizer/gradients/Loss/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/add_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/Loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/Loss/Sum_grad/Reshape"
  input: "Optimizer/gradients/Loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Shape"
  op: "Shape"
  input: "Loss/BPRLoss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Size"
  op: "Size"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/add"
  op: "Add"
  input: "Loss/BPRLoss/range"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/add"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_1"
  op: "Shape"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/range"
  op: "Range"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/range/start"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Size"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Fill"
  op: "Fill"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_1"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/range"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/mod"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/DynamicStitch"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/Squeeze_grad/Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_2"
  op: "Shape"
  input: "Loss/BPRLoss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Prod"
  op: "Prod"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_2"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Prod_1"
  op: "Prod"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Shape_3"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum_1"
  op: "Maximum"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Prod_1"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/floordiv_1"
  op: "FloorDiv"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Prod"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/Cast"
  op: "Cast"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss_grad/truediv"
  op: "RealDiv"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Tile"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum/input_grad/unstack"
  op: "Unpack"
  input: "Optimizer/gradients/Loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum/input"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum/input_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Loss/Sum/input_grad/unstack"
}
node {
  name: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Loss/Sum/input_grad/unstack"
  input: "^Optimizer/gradients/Loss/Sum/input_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum/input"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Loss/Sum/input_grad/unstack:1"
  input: "^Optimizer/gradients/Loss/Sum/input_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/Sum/input"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/Loss/BPRLoss_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency"
  input: "Layer/LinearWx/w/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul"
  input: "^Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul"
  input: "^Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency_1"
  input: "OutputVector/w/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/Loss/Sum/input_grad/tuple/control_dependency_1"
  input: "OutputVector/w/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul"
  input: "^Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul"
  input: "^Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "Loss/BPRLoss/add"
  input: "^Optimizer/gradients/Loss/BPRLoss/Neg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/Log"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/Log_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/Loss/BPRLoss/Neg_grad/Neg"
  input: "Optimizer/gradients/Loss/BPRLoss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/Log"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "Layer/LinearWx/w/read"
  input: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "OutputVector/w/read"
  input: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape"
  op: "Shape"
  input: "Loss/BPRLoss/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/Log_grad/mul"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/Log_grad/mul"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Sum_1"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape"
  input: "^Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape"
  input: "^Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/Reshape_1"
  input: "^Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Loss/BPRLoss/Sigmoid"
  input: "Optimizer/gradients/Loss/BPRLoss/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape"
  op: "Shape"
  input: "sequential/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape_1"
  op: "Shape"
  input: "sequential_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/Sigmoid_grad/SigmoidGrad"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/Loss/BPRLoss/Sigmoid_grad/SigmoidGrad"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Neg"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape"
  input: "^Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape"
  input: "^Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/Reshape_1"
  input: "^Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss/BPRLoss/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Squeeze_grad/Shape"
  op: "Shape"
  input: "sequential/OutputVector/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/control_dependency"
  input: "Optimizer/gradients/sequential/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Squeeze_grad/Shape"
  op: "Shape"
  input: "sequential_1/OutputVector/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/Loss/BPRLoss/sub_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/sequential_1/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/sequential/Squeeze_grad/Reshape"
  input: "OutputVector/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "sequential/Layer/Relu"
  input: "Optimizer/gradients/sequential/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/sequential_1/Squeeze_grad/Reshape"
  input: "OutputVector/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "sequential_1/Layer/Relu"
  input: "Optimizer/gradients/sequential_1/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/OutputVector/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/control_dependency"
  input: "sequential/Layer/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/control_dependency"
  input: "sequential_1/Layer/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN"
  op: "AddN"
  input: "Optimizer/gradients/OutputVector/w/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "Optimizer/gradients/sequential/OutputVector/MatMul_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/sequential_1/OutputVector/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape"
  op: "Shape"
  input: "sequential/Layer/LinearWx/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/sequential/Layer/Relu_grad/ReluGrad"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Sum"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/sequential/Layer/Relu_grad/ReluGrad"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Sum_1"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/Reshape_1"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape"
  op: "Shape"
  input: "sequential_1/Layer/LinearWx/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/sequential_1/Layer/Relu_grad/ReluGrad"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Sum"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/sequential_1/Layer/Relu_grad/ReluGrad"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Sum_1"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/Reshape_1"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/control_dependency"
  input: "Layer/LinearWx/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "concat"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/control_dependency"
  input: "Layer/LinearWx/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "concat_1"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential_1/Layer/LinearWx/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_1"
  op: "AddN"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/add_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/add_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/Layer/LinearWx/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "Optimizer/gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "mul"
  input: "UserMemoryLayer/AttentionHop0/OutputNeighborhood"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Optimizer/gradients/concat_grad/mod"
  input: "Optimizer/gradients/concat_grad/ShapeN"
  input: "Optimizer/gradients/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/Slice"
  op: "Slice"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/concat_grad/ConcatOffset"
  input: "Optimizer/gradients/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/concat_grad/ConcatOffset:1"
  input: "Optimizer/gradients/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/concat_grad/Slice"
  input: "^Optimizer/gradients/concat_grad/Slice_1"
}
node {
  name: "Optimizer/gradients/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/concat_grad/Slice"
  input: "^Optimizer/gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/concat_grad/Slice_1"
  input: "^Optimizer/gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/mod"
  op: "FloorMod"
  input: "concat_1/axis"
  input: "Optimizer/gradients/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/Shape"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "mul_1"
  input: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Optimizer/gradients/concat_1_grad/mod"
  input: "Optimizer/gradients/concat_1_grad/ShapeN"
  input: "Optimizer/gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/Slice"
  op: "Slice"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/concat_1_grad/ConcatOffset"
  input: "Optimizer/gradients/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/Slice_1"
  op: "Slice"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/concat_1_grad/ConcatOffset:1"
  input: "Optimizer/gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/concat_1_grad/Slice"
  input: "^Optimizer/gradients/concat_1_grad/Slice_1"
}
node {
  name: "Optimizer/gradients/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/concat_1_grad/Slice"
  input: "^Optimizer/gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/concat_1_grad/Slice_1"
  input: "^Optimizer/gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_2"
  op: "AddN"
  input: "Optimizer/gradients/Layer/LinearWx/w/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "Optimizer/gradients/sequential/Layer/LinearWx/MatMul_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/sequential_1/Layer/LinearWx/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "ItemMemory/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/mul_grad/Shape"
  input: "Optimizer/gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/concat_grad/tuple/control_dependency"
  input: "ItemMemory/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/mul_grad/Mul"
  input: "Optimizer/gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/mul_grad/Sum"
  input: "Optimizer/gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "Optimizer/gradients/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/mul_grad/Mul_1"
  input: "Optimizer/gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/mul_grad/Sum_1"
  input: "Optimizer/gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/mul_grad/Reshape"
  input: "^Optimizer/gradients/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/mul_grad/Reshape"
  input: "^Optimizer/gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/add"
  op: "Add"
  input: "UserMemoryLayer/AttentionHop0/OutputNeighborhood/reduction_indices"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/add"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range"
  op: "Range"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range/start"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Size"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Fill"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Shape_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/range"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/mod"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/concat_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "ItemMemory_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/mul_1_grad/Shape"
  input: "Optimizer/gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/concat_1_grad/tuple/control_dependency"
  input: "ItemMemory_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/mul_1_grad/Mul"
  input: "Optimizer/gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/mul_1_grad/Sum"
  input: "Optimizer/gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "MemoryEmbed/embedding_lookup/Identity"
  input: "Optimizer/gradients/concat_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/mul_1_grad/Mul_1"
  input: "Optimizer/gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/mul_1_grad/Sum_1"
  input: "Optimizer/gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/mul_1_grad/Reshape_1"
  input: "^Optimizer/gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/add"
  op: "Add"
  input: "UserMemoryLayer_1/AttentionHop0/OutputNeighborhood/reduction_indices"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/add"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range"
  op: "Range"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range/start"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Size"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Fill"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Shape_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/range"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/mod"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/concat_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/OutputNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/TransformOutputMemory"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Tile"
  input: "UserMemoryLayer/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Mul_1"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/TransformOutputMemory"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/OutputNeighborhood_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Mul_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Tile"
  input: "UserMemoryLayer_1/AttentionHop0/TransformAttention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Mul_1"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/OutputNeighborhood_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Mul_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformOutputMemory_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "UserMemoryLayer/AttentionHop0/TransformOutputMemory/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/TransformOutputMemory"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformOutputMemory_grad/transpose"
  op: "Transpose"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformOutputMemory_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/TransformOutputMemory"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformAttention_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/TransformAttention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformAttention_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformAttention_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/TransformAttention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformOutputMemory_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "UserMemoryLayer_1/AttentionHop0/TransformOutputMemory/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformOutputMemory_grad/transpose"
  op: "Transpose"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformOutputMemory_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/TransformOutputMemory"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformAttention_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/TransformAttention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformAttention_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/WeightedNeighborhood_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformAttention_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/TransformAttention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "MemoryOutput_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer/strided_slice_1_grad/Shape"
  input: "UserMemoryLayer/strided_slice_1/stack"
  input: "UserMemoryLayer/strided_slice_1/stack_1"
  input: "UserMemoryLayer/strided_slice_1/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformOutputMemory_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformAttention_grad/Reshape"
  input: "UserMemoryLayer/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/sub"
  op: "Sub"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/TransformAttention_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/sub"
  input: "UserMemoryLayer/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "MemoryOutput_2/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_1_grad/Shape"
  input: "UserMemoryLayer_1/strided_slice_1/stack"
  input: "UserMemoryLayer_1/strided_slice_1/stack_1"
  input: "UserMemoryLayer_1/strided_slice_1/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformOutputMemory_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformAttention_grad/Reshape"
  input: "UserMemoryLayer_1/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/sub"
  op: "Sub"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/TransformAttention_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/sub"
  input: "UserMemoryLayer_1/AttentionHop0/Attention"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Attention"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape_2"
  op: "Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape_2"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Select"
  op: "Select"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Select_1"
  op: "Select"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Attention_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Select"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Select_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape_2"
  op: "Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape_2"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Select"
  op: "Select"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Select_1"
  op: "Select"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/LessEqual"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/zeros"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Attention_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Select"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Select_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Size"
  op: "Size"
  input: "Neighborhood"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/strided_slice_1_grad/StridedSliceGrad"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "Neighborhood"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_grad/Shape"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_1"
  input: "UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Size"
  op: "Size"
  input: "NeighborhoodNeg"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_1_grad/StridedSliceGrad"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "NeighborhoodNeg"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_grad/Shape"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_1"
  input: "UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/Minimum_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/add"
  op: "Add"
  input: "UserMemoryLayer/AttentionHop0/Sum/reduction_indices"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/add"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range"
  op: "Range"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range/start"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Size"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Fill"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Shape_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/range"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/mod"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/MemoryMask/strided_slice_grad/StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_1"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryOutput_1/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/MemoryOutput_2/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/add"
  op: "Add"
  input: "UserMemoryLayer_1/AttentionHop0/Sum/reduction_indices"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/add"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range"
  op: "Range"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range/start"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Size"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Fill"
  op: "Fill"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Shape_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/range"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/mod"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/DynamicStitch"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/MemoryMask/strided_slice_grad/StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/AttentionHop0/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Tile"
  input: "UserMemoryLayer/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Mul"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Mul_1"
  op: "Mul"
  input: "UserMemoryLayer/AttentionHop0/transpose"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Mul_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/AttentionHop0/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape_1"
  op: "Shape"
  input: "UserMemoryLayer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Tile"
  input: "UserMemoryLayer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Mul"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Mul_1"
  op: "Mul"
  input: "UserMemoryLayer_1/AttentionHop0/transpose"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Mul_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "UserMemoryLayer/AttentionHop0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/transpose_grad/transpose"
  op: "Transpose"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/strided_slice_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer/strided_slice_grad/Shape"
  input: "UserMemoryLayer/strided_slice/stack"
  input: "UserMemoryLayer/strided_slice/stack_1"
  input: "UserMemoryLayer/strided_slice/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/mul_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "UserMemoryLayer_1/AttentionHop0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/transpose_grad/transpose"
  op: "Transpose"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed_2/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_grad/Shape"
  input: "UserMemoryLayer_1/strided_slice/stack"
  input: "UserMemoryLayer_1/strided_slice/stack_1"
  input: "UserMemoryLayer_1/strided_slice/stack_2"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/mul_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/ExpandDims_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer/InitialQuery"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/transpose_grad/transpose"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/AttentionHop0/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/ExpandDims_grad/Shape"
  op: "Shape"
  input: "UserMemoryLayer_1/InitialQuery"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/transpose_grad/transpose"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/AttentionHop0/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape_1"
  op: "Shape"
  input: "ItemMemory/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/ExpandDims_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer/AttentionHop0/ExpandDims_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Size"
  op: "Size"
  input: "Neighborhood"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer/strided_slice_grad/StridedSliceGrad"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "Neighborhood"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape"
  op: "Shape"
  input: "MemoryEmbed/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape_1"
  op: "Shape"
  input: "ItemMemory_1/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/ExpandDims_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/UserMemoryLayer_1/AttentionHop0/ExpandDims_grad/Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Sum_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape"
  input: "^Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/Reshape_1"
  input: "^Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@UserMemoryLayer_1/InitialQuery"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Size"
  op: "Size"
  input: "NeighborhoodNeg"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/UserMemoryLayer_1/strided_slice_grad/StridedSliceGrad"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "NeighborhoodNeg"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_3"
  op: "AddN"
  input: "Optimizer/gradients/mul_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_4"
  op: "AddN"
  input: "Optimizer/gradients/mul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/mul_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer/InitialQuery_grad/tuple/control_dependency"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_5"
  op: "AddN"
  input: "Optimizer/gradients/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/UserMemoryLayer_1/InitialQuery_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "TB\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Size"
  op: "Size"
  input: "ItemID"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/AddN_3"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "ItemID"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Size"
  op: "Size"
  input: "UserID"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/AddN_4"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "UserID"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "TB\000\000\000\000\000\000(\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Size"
  op: "Size"
  input: "NegativeItemID"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Size"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ToInt32"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack_1"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ExpandDims"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/strided_slice"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/AddN_5"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "NegativeItemID"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_2/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_2"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_3/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_3"
  op: "ConcatV2"
  input: "Optimizer/gradients/MemoryEmbed_1/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/MemoryEmbed_2/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/MemoryEmbed/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_4/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_4"
  op: "ConcatV2"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Reshape"
  input: "Optimizer/gradients/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_5/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/concat_5"
  op: "ConcatV2"
  input: "Optimizer/gradients/ItemMemory/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/ItemMemory_1/embedding_lookup_grad/Reshape_1"
  input: "Optimizer/gradients/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul"
  op: "Mul"
  input: "Optimizer/gradients/concat_2"
  input: "Optimizer/gradients/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm/mul"
  input: "Optimizer/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm/Sum"
  input: "Optimizer/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm/ones_like/Shape"
  input: "Optimizer/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm/Greater"
  input: "Optimizer/clip_by_norm/Sum"
  input: "Optimizer/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm/Greater"
  input: "Optimizer/clip_by_norm/Sqrt"
  input: "Optimizer/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/concat_2"
  input: "Optimizer/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm/Select_1"
  input: "Optimizer/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm/mul_1"
  input: "Optimizer/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm"
  op: "Identity"
  input: "Optimizer/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul"
  op: "Mul"
  input: "Optimizer/gradients/concat"
  input: "Optimizer/gradients/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_1/mul"
  input: "Optimizer/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_1/Sum"
  input: "Optimizer/clip_by_norm_1/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_1/ones_like/Shape"
  input: "Optimizer/clip_by_norm_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_1/Greater"
  input: "Optimizer/clip_by_norm_1/Sum"
  input: "Optimizer/clip_by_norm_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_1/Greater"
  input: "Optimizer/clip_by_norm_1/Sqrt"
  input: "Optimizer/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/concat"
  input: "Optimizer/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_1/Select_1"
  input: "Optimizer/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_1/mul_1"
  input: "Optimizer/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1"
  op: "Identity"
  input: "Optimizer/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul"
  op: "Mul"
  input: "Optimizer/gradients/concat_4"
  input: "Optimizer/gradients/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_2/mul"
  input: "Optimizer/clip_by_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_2/Sum"
  input: "Optimizer/clip_by_norm_2/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_2/ones_like/Shape"
  input: "Optimizer/clip_by_norm_2/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_2/Greater"
  input: "Optimizer/clip_by_norm_2/Sum"
  input: "Optimizer/clip_by_norm_2/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_2/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_2/Greater"
  input: "Optimizer/clip_by_norm_2/Sqrt"
  input: "Optimizer/clip_by_norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/concat_4"
  input: "Optimizer/clip_by_norm_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_2/Select_1"
  input: "Optimizer/clip_by_norm_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_2/mul_1"
  input: "Optimizer/clip_by_norm_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2"
  op: "Identity"
  input: "Optimizer/clip_by_norm_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul"
  op: "Mul"
  input: "Optimizer/gradients/AddN_2"
  input: "Optimizer/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_3/mul"
  input: "Optimizer/clip_by_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_3/Sum"
  input: "Optimizer/clip_by_norm_3/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_3/ones_like/Shape"
  input: "Optimizer/clip_by_norm_3/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_3/Greater"
  input: "Optimizer/clip_by_norm_3/Sum"
  input: "Optimizer/clip_by_norm_3/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_3/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_3/Greater"
  input: "Optimizer/clip_by_norm_3/Sqrt"
  input: "Optimizer/clip_by_norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/AddN_2"
  input: "Optimizer/clip_by_norm_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_3/Select_1"
  input: "Optimizer/clip_by_norm_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_3/mul_1"
  input: "Optimizer/clip_by_norm_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3"
  op: "Identity"
  input: "Optimizer/clip_by_norm_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/mul"
  op: "Mul"
  input: "Optimizer/gradients/AddN_1"
  input: "Optimizer/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_4/mul"
  input: "Optimizer/clip_by_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_4/Sum"
  input: "Optimizer/clip_by_norm_4/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_4/ones_like/Shape"
  input: "Optimizer/clip_by_norm_4/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_4/Greater"
  input: "Optimizer/clip_by_norm_4/Sum"
  input: "Optimizer/clip_by_norm_4/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_4/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_4/Greater"
  input: "Optimizer/clip_by_norm_4/Sqrt"
  input: "Optimizer/clip_by_norm_4/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/AddN_1"
  input: "Optimizer/clip_by_norm_4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_4/Select_1"
  input: "Optimizer/clip_by_norm_4/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_4/mul_1"
  input: "Optimizer/clip_by_norm_4/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_4"
  op: "Identity"
  input: "Optimizer/clip_by_norm_4/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/mul"
  op: "Mul"
  input: "Optimizer/gradients/AddN"
  input: "Optimizer/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_5/mul"
  input: "Optimizer/clip_by_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_5/Sum"
  input: "Optimizer/clip_by_norm_5/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_5/ones_like/Shape"
  input: "Optimizer/clip_by_norm_5/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_5/Greater"
  input: "Optimizer/clip_by_norm_5/Sum"
  input: "Optimizer/clip_by_norm_5/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_5/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_5/Greater"
  input: "Optimizer/clip_by_norm_5/Sqrt"
  input: "Optimizer/clip_by_norm_5/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/AddN"
  input: "Optimizer/clip_by_norm_5/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_5/Select_1"
  input: "Optimizer/clip_by_norm_5/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_5/mul_1"
  input: "Optimizer/clip_by_norm_5/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_5"
  op: "Identity"
  input: "Optimizer/clip_by_norm_5/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp/read"
  op: "Identity"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/MemoryEmbed/embeddings/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp/read"
  op: "Identity"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\025\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5551
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/MemoryOutput/embeddings/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "TB\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16980
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  input: "Optimizer/ItemMemory/embeddings/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp/read"
  op: "Identity"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "TB\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16980
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/ItemMemory/embeddings/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones"
  op: "Fill"
  input: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones/shape_as_tensor"
  input: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  input: "Optimizer/Layer/LinearWx/w/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp/read"
  op: "Identity"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/w/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  input: "Optimizer/Layer/LinearWx/b/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp/read"
  op: "Identity"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Layer/LinearWx/b/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp/Assign"
  op: "Assign"
  input: "Optimizer/OutputVector/w/RMSProp"
  input: "Optimizer/OutputVector/w/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp/read"
  op: "Identity"
  input: "Optimizer/OutputVector/w/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp_1/Assign"
  op: "Assign"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  input: "Optimizer/OutputVector/w/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/OutputVector/w/RMSProp_1/read"
  op: "Identity"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-10
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Unique"
  op: "Unique"
  input: "Optimizer/gradients/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Shape"
  op: "Shape"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Shape"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack_1"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "Optimizer/clip_by_norm"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Unique:1"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/SparseApplyRMSProp"
  op: "SparseApplyRMSProp"
  input: "MemoryEmbed/embeddings"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/UnsortedSegmentSum"
  input: "Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Unique"
  op: "Unique"
  input: "Optimizer/gradients/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Shape"
  op: "Shape"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Shape"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack_1"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "Optimizer/clip_by_norm_1"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Unique:1"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/SparseApplyRMSProp"
  op: "SparseApplyRMSProp"
  input: "MemoryOutput/embeddings"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/UnsortedSegmentSum"
  input: "Optimizer/ApplyGradients/update_MemoryOutput/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Unique"
  op: "Unique"
  input: "Optimizer/gradients/concat_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Shape"
  op: "Shape"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Shape"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack_1"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "Optimizer/clip_by_norm_2"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Unique:1"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/SparseApplyRMSProp"
  op: "SparseApplyRMSProp"
  input: "ItemMemory/embeddings"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/UnsortedSegmentSum"
  input: "Optimizer/ApplyGradients/update_ItemMemory/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_Layer/LinearWx/w/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Layer/LinearWx/w"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/clip_by_norm_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_Layer/LinearWx/b/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Layer/LinearWx/b"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/clip_by_norm_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update_OutputVector/w/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "OutputVector/w"
  input: "Optimizer/OutputVector/w/RMSProp"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  input: "LearningRateDecay/Variable/read"
  input: "Optimizer/ApplyGradients/decay"
  input: "Optimizer/ApplyGradients/momentum"
  input: "Optimizer/ApplyGradients/epsilon"
  input: "Optimizer/clip_by_norm_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/ApplyGradients/update"
  op: "NoOp"
  input: "^Optimizer/ApplyGradients/update_ItemMemory/embeddings/SparseApplyRMSProp"
  input: "^Optimizer/ApplyGradients/update_Layer/LinearWx/b/ApplyRMSProp"
  input: "^Optimizer/ApplyGradients/update_Layer/LinearWx/w/ApplyRMSProp"
  input: "^Optimizer/ApplyGradients/update_MemoryEmbed/embeddings/SparseApplyRMSProp"
  input: "^Optimizer/ApplyGradients/update_MemoryOutput/embeddings/SparseApplyRMSProp"
  input: "^Optimizer/ApplyGradients/update_OutputVector/w/ApplyRMSProp"
}
node {
  name: "Optimizer/ApplyGradients/value"
  op: "Const"
  input: "^Optimizer/ApplyGradients/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/ApplyGradients"
  op: "AssignAdd"
  input: "global_step"
  input: "Optimizer/ApplyGradients/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Model/Loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/Loss"
      }
    }
  }
}
node {
  name: "Model/Loss"
  op: "ScalarSummary"
  input: "Model/Loss/tags"
  input: "Loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/LearningRate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/LearningRate"
      }
    }
  }
}
node {
  name: "Model/LearningRate"
  op: "ScalarSummary"
  input: "Model/LearningRate/tags"
  input: "LearningRateDecay/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Model/Loss"
  input: "Model/LearningRate"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "LearningRateDecay/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LearningRateDecay/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Dropout/DropoutProbability"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dropout/DropoutProbability"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "MemoryEmbed/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "MemoryOutput/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "ItemMemory/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Layer/LinearWx/w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Layer/LinearWx/b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "OutputVector/w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Optimizer/OutputVector/w/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 21
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "LearningRateDecay/Variable"
        string_val: "Dropout/DropoutProbability"
        string_val: "MemoryEmbed/embeddings"
        string_val: "MemoryOutput/embeddings"
        string_val: "ItemMemory/embeddings"
        string_val: "Layer/LinearWx/w"
        string_val: "Layer/LinearWx/b"
        string_val: "OutputVector/w"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp_1"
        string_val: "Optimizer/OutputVector/w/RMSProp"
        string_val: "Optimizer/OutputVector/w/RMSProp_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Dropout/DropoutProbability/Assign"
  input: "^ItemMemory/embeddings/Assign"
  input: "^Layer/LinearWx/b/Assign"
  input: "^Layer/LinearWx/w/Assign"
  input: "^LearningRateDecay/Variable/Assign"
  input: "^MemoryEmbed/embeddings/Assign"
  input: "^MemoryOutput/embeddings/Assign"
  input: "^Optimizer/ItemMemory/embeddings/RMSProp/Assign"
  input: "^Optimizer/ItemMemory/embeddings/RMSProp_1/Assign"
  input: "^Optimizer/Layer/LinearWx/b/RMSProp/Assign"
  input: "^Optimizer/Layer/LinearWx/b/RMSProp_1/Assign"
  input: "^Optimizer/Layer/LinearWx/w/RMSProp/Assign"
  input: "^Optimizer/Layer/LinearWx/w/RMSProp_1/Assign"
  input: "^Optimizer/MemoryEmbed/embeddings/RMSProp/Assign"
  input: "^Optimizer/MemoryEmbed/embeddings/RMSProp_1/Assign"
  input: "^Optimizer/MemoryOutput/embeddings/RMSProp/Assign"
  input: "^Optimizer/MemoryOutput/embeddings/RMSProp_1/Assign"
  input: "^Optimizer/OutputVector/w/RMSProp/Assign"
  input: "^Optimizer/OutputVector/w/RMSProp_1/Assign"
  input: "^OutputVector/w/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "Dropout/DropoutProbability"
        string_val: "ItemMemory/embeddings"
        string_val: "Layer/LinearWx/b"
        string_val: "Layer/LinearWx/w"
        string_val: "LearningRateDecay/Variable"
        string_val: "MemoryEmbed/embeddings"
        string_val: "MemoryOutput/embeddings"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp_1"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
        string_val: "Optimizer/OutputVector/w/RMSProp"
        string_val: "Optimizer/OutputVector/w/RMSProp_1"
        string_val: "OutputVector/w"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Dropout/DropoutProbability"
  input: "ItemMemory/embeddings"
  input: "Layer/LinearWx/b"
  input: "Layer/LinearWx/w"
  input: "LearningRateDecay/Variable"
  input: "MemoryEmbed/embeddings"
  input: "MemoryOutput/embeddings"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  input: "Optimizer/OutputVector/w/RMSProp"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  input: "OutputVector/w"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "Dropout/DropoutProbability"
        string_val: "ItemMemory/embeddings"
        string_val: "Layer/LinearWx/b"
        string_val: "Layer/LinearWx/w"
        string_val: "LearningRateDecay/Variable"
        string_val: "MemoryEmbed/embeddings"
        string_val: "MemoryOutput/embeddings"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp"
        string_val: "Optimizer/ItemMemory/embeddings/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/b/RMSProp_1"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp"
        string_val: "Optimizer/Layer/LinearWx/w/RMSProp_1"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp"
        string_val: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp"
        string_val: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
        string_val: "Optimizer/OutputVector/w/RMSProp"
        string_val: "Optimizer/OutputVector/w/RMSProp_1"
        string_val: "OutputVector/w"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Dropout/DropoutProbability"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dropout/DropoutProbability"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "ItemMemory/embeddings"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Layer/LinearWx/b"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Layer/LinearWx/w"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "LearningRateDecay/Variable"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LearningRateDecay/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MemoryEmbed/embeddings"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MemoryOutput/embeddings"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Optimizer/ItemMemory/embeddings/RMSProp"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Optimizer/ItemMemory/embeddings/RMSProp_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ItemMemory/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16980
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/b/RMSProp"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/b/RMSProp_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/w/RMSProp"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Optimizer/Layer/LinearWx/w/RMSProp_1"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer/LinearWx/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Optimizer/MemoryEmbed/embeddings/RMSProp_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryEmbed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Optimizer/MemoryOutput/embeddings/RMSProp_1"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MemoryOutput/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5551
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Optimizer/OutputVector/w/RMSProp"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Optimizer/OutputVector/w/RMSProp_1"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "OutputVector/w"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OutputVector/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "Model/Loss"
  input: "Model/LearningRate"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 27
}
